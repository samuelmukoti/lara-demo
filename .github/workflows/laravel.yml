name: Deploy

on:
  push:
    branches: [main, production]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'staging' || 'production' }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Assuming MySQL is needed for running migrations or tests
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: larademo
          mysql user: root
          mysql password: root

      - name: Generate .env
        run: |
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          touch database/database.sqlite

      - name: Update composer
        run: composer update

      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install node dependencies
        run: npm ci

      - name: Setup Project
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
          npm run build

      - name: Directory Permissions
        run: chmod 755 -R storage bootstrap/cache

      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Archive Built Project artifacts
        run: tar -czf build.tar.gz public

      # - name: Deploy to Server
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     port: ${{ secrets.SSH_PORT }}
      #     key: ${{ secrets.SSH_KEY }}
      #     source: "build.tar.gz"
      #     use_insecure_cipher: true
      #     target: ${{ secrets.SSH_PROJECT_PATH}}

      - name: Deploy to Server using rsync
        run: |
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" --progress --delete-after build.tar.gz ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PROJECT_PATH }}

      - name: Execute Deployment Script
        uses: appleboy/ssh-action@master
        env:
          PROJECT_PATH: ${{ secrets.SSH_PROJECT_PATH }}
          ENV_NAME: ${{ github.ref == 'refs/heads/main' && 'staging' || 'production' }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            cd $PROJECT_PATH
            git pull
            tar -xvzf build.tar.gz && rm build.tar.gz
            cp .env.example .env
            chmod +x update_envs.sh
            ./update_envs.sh
            cat .env
            composer install --optimize-autoloader --no-dev
            php artisan migrate --force
            # Any additional commands...
